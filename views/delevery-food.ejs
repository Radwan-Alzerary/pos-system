<%- include('header'); %>


    <div id="shadedbackground" class=" hidden fixed w-screen h-screen top-0 bg-black opacity-10 z-10"></div>

    <form action="/table/convertable" method="POST" id="editableform"
        class=" fixed flex hidden flex-col justify-center gap-5 items-center  w-1/2 h-1/2  bg-white p-5 rounded-xl z-50"
        style="left: 50%; top: 50%; transform: translate(-50%, -50%);">
        <div class="mb-6 w-full">
            <label for="default-input"
                class="block text-right mb-2 text-sm font-medium text-gray-900 dark:text-white">الاسم</label>
            <div>
                <select id="countries" name="newtable"
                    class="bg-gray-50 border  border-gray-300 text-right w-full text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    <%table.forEach(function(tables,index) { %>
                        <option value="<%=tables.id%>">
                            <%if(tables.number==1000000){%>
                                دلفري
                                <%}else{%>
                                    <%=tables.number%>
                                        <%}%>
                        </option>
                        <%})%>
                </select>
                <input name="currentable" class="hidden" type="text" value="<%=tableid%>">
            </div>
        </div>
        <input type="submit" class="w-full h-11 bg-green-300 hover:bg-green-400 rounded-lg cursor-pointer"
            value="تحويل">
    </form>
    <div id="moneybackform" class=" fixed hidden flex flex-col justify-center gap-5 items-center  w-1/2 h-1/2  bg-white p-5 rounded-xl z-50"
        style="left: 50%; top: 50%; transform: translate(-50%, -50%);">
        <div>
            <div class="items-center text-center">
                ارجاع الباقي
            </div>
        </div>
        <div class="flex w-full gap-2 ">
            <div onclick="addmoney(250)">
                <img class="h-28 cursor-pointer hover:opacity-60" src="/img/money/250.jpg">
            </div>
            <div onclick="addmoney(500)">
                <img class="h-28 cursor-pointer hover:opacity-60" src="/img/money/500.jpg">
            </div>
            <div onclick="addmoney(1000)">
                <img class="h-28 cursor-pointer hover:opacity-60" src="/img/money/1000.jpg">
            </div>
            <div onclick="addmoney(5000)">
                <img class="h-28 cursor-pointer hover:opacity-60" src="/img/money/5000.jpg">
            </div>

        </div>
        <div class="flex w-full gap-2">
            <div onclick="addmoney(10000)">
                <img class="h-28 cursor-pointer hover:opacity-60" src="/img/money/10000.jpg">
            </div>
            <div onclick="addmoney(25000)">
                <img class="h-28 cursor-pointer hover:opacity-60" src="/img/money/25000.jpg">
            </div>
            <div onclick="addmoney(50000)">
                <img class="h-28 cursor-pointer hover:opacity-60" src="/img/money/50000.jpg">
            </div>
        </div>

        <div class="flex gap-4 items-center w-full justify-center">
            <div class="w-[33%]">
                <input type="text" placeholder="المبلغ الكلي" name="name" id="orderamount" oninput="fullamontchange()"
                    class="bg-gray-50 mb-2 text-right border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block  p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
            </div>
            <div class="w-[33%] text-center">
                <p>
                    الباقي
                </p>
                <a class="font-bold text-lg" id="amontleft">
                    0
                </a>

            </div>
            <div class="w-[33%]">
                <input type="text" placeholder="المبلغ المستلم" id="amontget" oninput="amontgetchange()" name="name" id="resivename"
                    class="bg-gray-50 mb-2 text-right border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block  p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">

            </div>
        </div>

    </div>
    
    <div id="printingsettingform"
    class=" fixed hidden flex flex-col justify-center gap-5 items-center  w-3/12 h-3/12  bg-white p-5 rounded-xl z-50"
    style="left: 50%; top: 50%; transform: translate(-50%, -50%);">
    <div class="text-center flex justify-center items-center">
        <a>
            عدد الطبعات
        </a>
    </div>
    <div >
        <input type="text"  value="2"  name="name"    id="printingcount"

            class="bg-gray-50 text-center mb-2  border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block  p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
    </div>


</div>

    <div class="flex">
        <div class="w-1/4" style="width: 30%;">
            <div class="bg-white mb-0.5 items-center " style="height: 6%; display: flex;justify-content: space-around;">
                <div class="flex gap-3 py-2">
                    <div id="previosinvoice"
                        class="w-10 h-10 flex justify-center items-center rounded-lg bg-gray-100 hover:bg-gray-200 cursor-pointer">
                        <svg class="opacity-50 transform rotate-180" xmlns="http://www.w3.org/2000/svg" height="1em"
                            viewBox="0 0 320 512">
                            <path
                                d="M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z">
                            </path>
                        </svg>
                    </div>
                    <div id="reloadfoods"
                        class="w-10 h-10 flex justify-center items-center rounded-lg bg-gray-100 hover:bg-gray-200 cursor-pointer">
                        <svg class="transform hover:rotate-180 transition-all" id="refrash"
                            xmlns="http://www.w3.org/2000/svg" height="1.2em"
                            viewBox="0 0 512 512"><!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                            <style>
                                #refrash {
                                    fill: #2196c0
                                }
                            </style>
                            <path
                                d="M105.1 202.6c7.7-21.8 20.2-42.3 37.8-59.8c62.5-62.5 163.8-62.5 226.3 0L386.3 160H336c-17.7 0-32 14.3-32 32s14.3 32 32 32H463.5c0 0 0 0 0 0h.4c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32s-32 14.3-32 32v51.2L414.4 97.6c-87.5-87.5-229.3-87.5-316.8 0C73.2 122 55.6 150.7 44.8 181.4c-5.9 16.7 2.9 34.9 19.5 40.8s34.9-2.9 40.8-19.5zM39 289.3c-5 1.5-9.8 4.2-13.7 8.2c-4 4-6.7 8.8-8.1 14c-.3 1.2-.6 2.5-.8 3.8c-.3 1.7-.4 3.4-.4 5.1V448c0 17.7 14.3 32 32 32s32-14.3 32-32V396.9l17.6 17.5 0 0c87.5 87.4 229.3 87.4 316.7 0c24.4-24.4 42.1-53.1 52.9-83.7c5.9-16.7-2.9-34.9-19.5-40.8s-34.9 2.9-40.8 19.5c-7.7 21.8-20.2 42.3-37.8 59.8c-62.5 62.5-163.8 62.5-226.3 0l-.1-.1L125.6 352H176c17.7 0 32-14.3 32-32s-14.3-32-32-32H48.4c-1.6 0-3.2 .1-4.8 .3s-3.1 .5-4.6 1z" />
                        </svg>

                    </div>
                    <div id="translateinvoice"
                        class="w-10 h-10 flex justify-center  items-center rounded-lg bg-gray-100 hover:bg-gray-200 cursor-pointer">
                        <svg xmlns="http://www.w3.org/2000/svg" class="fill-green-500" id="translatable" height="1.2em"
                            viewBox="0 0 576 512"><!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                            <path
                                d="M400 255.4V240 208c0-8.8-7.2-16-16-16H352 336 289.5c-50.9 0-93.9 33.5-108.3 79.6c-3.3-9.4-5.2-19.8-5.2-31.6c0-61.9 50.1-112 112-112h48 16 32c8.8 0 16-7.2 16-16V80 64.6L506 160 400 255.4zM336 240h16v48c0 17.7 14.3 32 32 32h3.7c7.9 0 15.5-2.9 21.4-8.2l139-125.1c7.6-6.8 11.9-16.5 11.9-26.7s-4.3-19.9-11.9-26.7L409.9 8.9C403.5 3.2 395.3 0 386.7 0C367.5 0 352 15.5 352 34.7V80H336 304 288c-88.4 0-160 71.6-160 160c0 60.4 34.6 99.1 63.9 120.9c5.9 4.4 11.5 8.1 16.7 11.2c4.4 2.7 8.5 4.9 11.9 6.6c3.4 1.7 6.2 3 8.2 3.9c2.2 1 4.6 1.4 7.1 1.4h2.5c9.8 0 17.8-8 17.8-17.8c0-7.8-5.3-14.7-11.6-19.5l0 0c-.4-.3-.7-.5-1.1-.8c-1.7-1.1-3.4-2.5-5-4.1c-.8-.8-1.7-1.6-2.5-2.6s-1.6-1.9-2.4-2.9c-1.8-2.5-3.5-5.3-5-8.5c-2.6-6-4.3-13.3-4.3-22.4c0-36.1 29.3-65.5 65.5-65.5H304h32zM72 32C32.2 32 0 64.2 0 104V440c0 39.8 32.2 72 72 72H408c39.8 0 72-32.2 72-72V376c0-13.3-10.7-24-24-24s-24 10.7-24 24v64c0 13.3-10.7 24-24 24H72c-13.3 0-24-10.7-24-24V104c0-13.3 10.7-24 24-24h64c13.3 0 24-10.7 24-24s-10.7-24-24-24H72z" />
                        </svg>
                    </div>

                    <div class="w-10 h-10 rounded-lg flex justify-center  items-center  cursor-pointer bg-gray-100" onclick="showmoneyback()">
                        <svg xmlns="http://www.w3.org/2000/svg" class="fill-green-500" height="1.5em" 
                            viewBox="0 0 640 512"><!--! Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                            <path
                                d="M535 41c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l64 64c4.5 4.5 7 10.6 7 17s-2.5 12.5-7 17l-64 64c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l23-23L384 112c-13.3 0-24-10.7-24-24s10.7-24 24-24l174.1 0L535 41zM105 377l-23 23L256 400c13.3 0 24 10.7 24 24s-10.7 24-24 24L81.9 448l23 23c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0L7 441c-4.5-4.5-7-10.6-7-17s2.5-12.5 7-17l64-64c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM96 64H337.9c-3.7 7.2-5.9 15.3-5.9 24c0 28.7 23.3 52 52 52l117.4 0c-4 17 .6 35.5 13.8 48.8c20.3 20.3 53.2 20.3 73.5 0L608 169.5V384c0 35.3-28.7 64-64 64H302.1c3.7-7.2 5.9-15.3 5.9-24c0-28.7-23.3-52-52-52l-117.4 0c4-17-.6-35.5-13.8-48.8c-20.3-20.3-53.2-20.3-73.5 0L32 342.5V128c0-35.3 28.7-64 64-64zm64 64H96v64c35.3 0 64-28.7 64-64zM544 320c-35.3 0-64 28.7-64 64h64V320zM320 352a96 96 0 1 0 0-192 96 96 0 1 0 0 192z" />
                        </svg>
                    </div>
                    <div id="printersetting" onclick="showprinterform()"
                    class="w-10 h-10 flex justify-center  items-center rounded-lg bg-gray-100 hover:bg-gray-200 cursor-pointer">
                    <svg xmlns="http://www.w3.org/2000/svg" id="printericon" height="1em"
                        viewBox="0 0 512 512"><!--! Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                        <style>
                            #printericon {
                                fill: #826fe2
                            }
                        </style>
                        <path
                            d="M128 0C92.7 0 64 28.7 64 64v96h64V64H354.7L384 93.3V160h64V93.3c0-17-6.7-33.3-18.7-45.3L400 18.7C388 6.7 371.7 0 354.7 0H128zM384 352v32 64H128V384 368 352H384zm64 32h32c17.7 0 32-14.3 32-32V256c0-35.3-28.7-64-64-64H64c-35.3 0-64 28.7-64 64v96c0 17.7 14.3 32 32 32H64v64c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V384zM432 248a24 24 0 1 1 0 48 24 24 0 1 1 0-48z" />
                    </svg>
                </div>

                </div>
                <div id="insidelevery" class="w-24 h-10 rounded-lg bg-green-100">
                    <div class="flex justify-center items-center  h-full">
                        داخل صالة
                    </div>
                </div>
            </div>
            <div id="invoicefood" class="bg-white relative overflow-auto h-56">

            </div>
            <div class="w-full flex">
                <input type="number" placeholder="سعر التوصيل" name="name" value="0" oninput="deleveryCostChange(event)" id="deleveryCost"
                    class="bg-gray-50 text-right border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    <input type="text" placeholder="اسم المستلم" name="name" id="resivename"
                    class="bg-gray-50 text-right border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">

            </div>
            <div class="mb-6 w-full">
                <input
                type="text"
                placeholder="الملاحضات"
                name="name"
                id="comments"
                class="bg-gray-50 my-2 text-right border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
              />
                </div>

            <div class="mt-5 w-full flex items-center justify-center h-12">
                <div class="mb-6 w-3/4">
                    <input type="text" placeholder="خصم" name="name" oninput="discountchange(event)" id="discontinput"
                        class="bg-gray-50 text-right border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                </div>
                <div class="mb-6 w-3/4">
                    <input type="text" placeholder="رقم الهاتف" name="name" id="deloveryphone"
                        class="bg-gray-50 text-right border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                </div>
                <div class="mb-6 w-3/4">
                    <input type="text" placeholder="العنوان" name="name" id="deloveryname"
                        class="bg-gray-50 text-right border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                </div>

        
            </div>
            <div>
                <select id="countries" name="tablenum"
                    class="bg-gray-50 border border-gray-300 text-right w-full text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    <%delevery.forEach(function(deleverys,index) { %>
                        <option id="deleveryid" value="<%=deleverys.id%>">
                            <%=deleverys.deliveryname%>
                        </option>
                        <%})%>
                </select>

            </div>
            <div class="bg-zinc-100 h-1/4 pt-3">
                <div class="flex justify-around gap-16 mb-1 items-center">
                    <div class="font-medium text-sm"><a id="totalprice">0</a><span> IQD</span></div>
                    <div class="text-gray-600 text-sm"><a>مجموع السعر</a></div>
                </div>

                <div class="w-full h-0.5 bg-slate-400 opacity-20"></div>
                <div class="flex justify-around my-1 gap-16 items-center">
                    <div class="font-medium text-sm"><a id="totaldiscount">0</a><span> IQD</span></div>
                    <div class="text-gray-600 text-sm"><a>الخصومات</a></div>
                </div>
                <div class="flex justify-around my-1 gap-16 items-center">
                    <div class="font-medium text-sm"><a id="deleveryCostView">0</a><span> IQD</span></div>
                    <div class="text-gray-600 text-sm"><a>التوصيل</a></div>
                </div>

                <div class="w-full h-0.5 bg-slate-400 opacity-20"></div>
                <div class="flex justify-around my-1 gap-16 items-center">
                    <div class="font-bold"><a id="finalcost">0</a><span> IQD</span></div>
                    <div class="text-black text-base font-semibold"><a>السعر النهائي</a></div>
                </div>
                <div class="w-full h-0.5 bg-slate-400 opacity-20"></div>
                <div class="flex items-center p-3 gap-4">
                    <div class="w-1/2">
                        <button onclick="finish()"
                            class="bg-green-300 hover:bg-green-400 w-full h-12 rounded-md">انهاء</button>
                    </div>
                    <div class="w-1/2">
                        <button onclick="cancele()"
                            class="bg-red-300 hover:bg-red-400 w-full h-12 rounded-md">الغاء</button>
                    </div>
                </div>
                <div id="err-msg" class="hidden flex justify-center items-center text-red-500 text-sm font-normal">
                    <a>ادخل بيانات المرسل</a>
                </div>
            </div>
        </div>

        <div class="bg-gray-100 w-3/4">
            <div class="mx-auto max-w-2xl px-4 pb-16 sm:px-6 sm:py-1.5 lg:max-w-7xl lg:px-8">
                <div class="w-full flex items-center gap-2 h-16 bg-white rounded-lg mb-6 justify-end p-3">
                    <%if(category[0]){%>
                        <%category.forEach(function(categorys,index) { %>
                            <div id="categorydoor<%=categorys.id%>"
                                class="h-8 cursor-pointer flex items-center p-3 hover:bg-orange-300 bg-orange-100   rounded-xl ">
                                <%=categorys.name%>
                            </div>
                            <%})}else{%>
                                <div
                                    class="h-8 cursor-pointer flex items-center p-3 hover:bg-orange-300 bg-orange-100   rounded-xl ">
                                    لا يوجد اقسام
                                </div>
                                <%}%>
                </div>
                <%if(category[0]){%>
                    <%category.forEach(function(categorys,index) { %>
                        <% if(index==0){%>
                            <div id="cataegoryfoodscontect<%=categorys.id%>"
                                class=" grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 xl:gap-x-8 overflow-y-scroll "
                                style="height: 76vh;">
                                <% }else{%>
                                    <div id="cataegoryfoodscontect<%=categorys.id%>"
                                        class="hidden grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2   lg:grid-cols-3 xl:grid-cols-6 xl:gap-x-8 overflow-y-scroll "
                                        style="height: 76vh;">
                                        <%}%>
                                            <%if(categorys.foods){%>
                                                <%for (let i=0; i < categorys.foods.length; i++) { %>
                                                    <div class=" group text-center bg-white "
                                                        id="selectfood<%=categorys.foods[i].id%>">
                                                        <div
                                                            class="aspect-h-1 aspect-w-1  w-full overflow-hidden rounded-lg bg-gray-200 xl:aspect-h-6 xl:aspect-w-6">
                                                            <img src="<%=categorys.foods[i].image.url%>"
                                                                alt="Tall slender porcelain bottle with natural clay textured body and cork stopper."
                                                                class="h-full w-full object-cover object-center cursor-pointer group-hover:opacity-75">
                                                        </div>
                                                        <h3 class="mt-4 text-sm text-gray-700">
                                                            <%=categorys.foods[i].name%>
                                                        </h3>
                                                        <div
                                                            class=" border-solid pb-3 border-violet-50 border-t-2 w-full">
                                                            <p class="mt-1 text-lg font-medium text-gray-900">
                                                                <%=categorys.foods[i].price%> IQD
                                                            </p>
                                                        </div>
                                                    </div>
                                                    <%}}else{%>
                                                        <a>لا يوجد اطعمة مضافة</a>
                                                        <%}%>
                                    </div>
                                    <%})}else{%>
                                        <%}%>
                            </div>
            </div>
        </div>
        <a id="invoiceidelement" class="hidden"></a>
        <script>
                        <%if (category[0]) {%>
            var previosopendoor = "<%=category[0].id%>";
            <%}%>

                $(document).on('click', '[id^=categorydoor]', function () {
                    var id = this.id;

                    var categoryid = id.replace('categorydoor', '');
                    if ($(`#cataegoryfoodscontect${categoryid}`).css('display') === 'none') {
                        $(`#cataegoryfoodscontect${categoryid}`).removeClass('hidden');
                        if (previosopendoor) {
                            $(`#cataegoryfoodscontect${previosopendoor}`).addClass('hidden');
                        }
                    } else {

                    }
                    previosopendoor = categoryid
                });
        </script>

        <script>
            const currentUrl = window.location.href;
            console.log("Current URL:", currentUrl);
            const url = new URL(currentUrl);
            const searchParams = new URLSearchParams(url.search);
            const table = searchParams.get("tableid");
            console.log("ID:", table);
            refrash();

            function refrash() {
                const invoiceFoodDiv = document.getElementById("invoicefood");
                invoiceFoodDiv.innerHTML = "";

                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const table = searchParams.get("tableid");
                console.log("ID:", table);

                fetch(`/invoice/${table}/foodmenu`)
                    .then(response => response.json())
                    .then(data => {
                        let totalPrice = 0; // Initialize the total price variable
                        let fulldiscount = 0
                        let invoiceid = data.invoiceid
                        $("#invoiceidelement").text(`${invoiceid}`);
                        console.log(data)
                        // Iterate over each food item and create the corresponding HTML
                        data.food.forEach(food => {
                            const foodTotalPrice = food.id.price * food.quantity;
                            totalPrice += foodTotalPrice;
                            fulldiscount += food.discount;
                            newitem(food.id, invoiceid, food.quantity)
                            getprices($("#invoiceidelement").text())
                        });
                        console.log('Overall total price:', totalPrice);
                        console.log('Overall total price:', fulldiscount);
                        $("#totaldiscount").text(`${fulldiscount}`);
                        $("#totalprice").text(`${totalPrice}`);
                        $("#finalcost").text(`${totalPrice - fulldiscount}`);
                    })
                    .catch(error => {
                        console.error(error);
                    });
            }


            $(document).on('click', '[id^=selectfood]', function () {
                var id = this.id;
                const foodId = id.replace('selectfood', '');

                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const table = searchParams.get("tableid");
                console.log("ID:", table);
                const tableId = table; // Replace with the actual table ID
                fetch("/invoice/food/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ tableId, foodId })
                })
                    .then(response => response.json())
                    .then(data => {
                        $("#invoiceidelement").text(`${data.invoiceId}`)

                        if (data.message == "alredyadd") {
                            console.log(data)
                            $(`#quantity${data.updatedfoodid}`).val(`${data.newquantity}`);
                            console.log($(`#quantity${data.food._id}`).text())
                            getprices($("#invoiceidelement").text())
                        } else {
                            invoiceid = $("#invoiceidelement").text()
                            console.log(data.food);
                            newitem(data.food, invoiceid, data.newquantity)
                            getprices($("#invoiceidelement").text())
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            });



            $(document).on('click', '[id^=removeinvoice]', function () {
                var id = this.id;
                var foodid = id.replace('removeinvoice', '');
                var foodjson = JSON.parse(foodid)
                console.log(foodjson)

                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");

                fetch(`/invoice/${tableId}/${foodjson.invoiceid}/food/${foodjson.foodid}`, {
                    method: 'DELETE',
                })
                    .then(response => {
                        if (response.ok) {
                            deletedfoodprice = Number($(`#price${foodjson.foodid}`).text());
                            deletedfoodquantity = Number($(`#quantity${foodjson.foodid}`).val());
                            deletedfoodfinalprice = deletedfoodquantity * deletedfoodprice
                            corentfinalprice = Number($("#totalprice").text()) - deletedfoodfinalprice
                            console.log(deletedfoodfinalprice)
                            console.log(corentfinalprice)
                            // $("#totaldiscount").text(`${fulldiscount}`);
                            getprices($("#invoiceidelement").text())
                            console.log('Food item removed successfully');
                            const divToRemove = document.getElementById(`${foodjson.foodid}`);
                            // Check if the div element exists
                            if (divToRemove) {
                                // Remove the div element
                                divToRemove.remove();



                            } else {
                                console.log("Div element not found.");
                            }

                        } else {
                            throw new Error('Failed to remove food item');
                        }
                    })
                    .catch(error => {
                        console.error(error);
                    });

            })

            function cancele() {
                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const invoiceId = $('#invoiceidelement').text()
                const finalcost = $("#finalcost").text();
                const totalcost = $("#totalprice").text();
                const totaldicont = $("#totaldiscount").text();

                fetch("/invoice/cancele/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ tableId, invoiceId, finalcost, totalcost, totaldicont })
                })
                    .then(response => response.json())
                    .then(data => {
                        $("#finalcost").text(0);
                        $("#totalprice").text(0);
                        $("#totaldiscount").text(0)
                        console.log(data)
                        $("#invoiceidelement").text(" ");
                        const invoiceFoodDiv = document.getElementById("invoicefood");
                        invoiceFoodDiv.innerHTML = "";
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            }
            function finish() {
                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const finalcost = $("#finalcost").text();
                const totalcost = $("#totalprice").text();
                const totaldicont = $("#totaldiscount").text();
                const invoiceId = $('#invoiceidelement').text();
                const deloveryname = $('#deloveryname').val();
                const resivename = $('#resivename').val();
                const deleveryid = $('#deleveryid').val();
                const deloveryphone = $('#deloveryphone').val();
                if ((deloveryname.length > 0 & deloveryphone.length > 0) || indordelevery) {
                    fetch("/delevery/finish/", {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ tableId,resivename, invoiceId, finalcost, totalcost, totaldicont, deloveryname, deloveryphone, deleveryid })
                    })
                        .then(response => response.json())
                        .then(data => {
                            console.log(data)
                            $("#finalcost").text(0);
                            $("#totalprice").text(0);
                            $("#totaldiscount").text(0)
                            $("#invoiceidelement").text(" ");
                            const Comments = $("#comments").val();
                            const deleveryCost = $("#deleveryCost").val();

                            refrash()
                            const printingcountvalue = $('#printingcount').val()

                            printinvoice(invoiceId,resivename, deloveryname, deloveryphone,"","",printingcountvalue,Comments,deleveryCost,"delevery")

                        })
                        .catch(error => {
                            console.error('Error:', error);
                            // Handle errors
                        });
                } else {
                    $("#err-msg").css('display', 'flex')
                }
            }

            // function printinvoice(invoiceId) {
            //     fetch(`/invoice/${invoiceId}/checout`)
            //         .then(response => response.json())
            //         .then(data => {

            //             const elementsToRemove = document.querySelectorAll(".ticketprinter");
            //             // Remove each element and its contents
            //             elementsToRemove.forEach(element => {
            //                 element.parentNode.removeChild(element);
            //             });

            //             // Create the outer <div> element with class "ticketprinter"
            //             const ticketPrinterDiv = document.createElement("div");
            //             ticketPrinterDiv.className = "ticketprinter";

            //             // Create the inner <div> element with class "ticket"
            //             const ticketDiv = document.createElement("div");
            //             ticketDiv.className = "ticket";

            //             // Create the first inner <div> element with class "logoimg"
            //             const logoimgDiv1 = document.createElement("div");
            //             logoimgDiv1.className = "logoimg";

            //             // Create the <img> element and set its attributes
            //             const img1 = document.createElement("img");
            //             img1.src = `${data.setting.shoplogo}`;
            //             img1.alt = "Logo";

            //             // Append the <img> element to the first inner <div>
            //             logoimgDiv1.appendChild(img1);

            //             // Create the first <p> element with class "centered" and its text
            //             const p1 = document.createElement("p");
            //             p1.className = "centered";
            //             p1.textContent = "الفاتورة";

            //             // Append the first inner <div> and <p> element to the outer <div>
            //             ticketDiv.appendChild(logoimgDiv1);
            //             ticketDiv.appendChild(p1);

            //             // Create the second inner <div> element with class "logoimg"
            //             const logoimgDiv2 = document.createElement("div");
            //             logoimgDiv2.className = "logoimg";

            //             // Create the <a> element and set its text
            //             const a = document.createElement("a");
            //             a.textContent = "عنوان التوصيل : حي الزهور";

            //             // Append the <a> element to the second inner <div>
            //             logoimgDiv2.appendChild(a);

            //             // Append the second inner <div> to the outer <div>
            //             ticketDiv.appendChild(logoimgDiv2);

            //             // Create the <table> element
            //             const table = document.createElement("table");

            //             // Create the <thead> and <tbody> elements
            //             const thead = document.createElement("thead");
            //             const tbody = document.createElement("tbody");

            //             // Create the header row (<tr>) with its cells (<th>)
            //             const headerRow = document.createElement("tr");

            //             const descriptionTh = document.createElement("th");
            //             descriptionTh.className = "description";
            //             descriptionTh.textContent = "الاسم";

            //             const quantityTh = document.createElement("th");
            //             quantityTh.className = "quantity";
            //             quantityTh.textContent = "#";

            //             const priceTh1 = document.createElement("th");
            //             priceTh1.className = "price";
            //             priceTh1.textContent = "السعر";

            //             const priceTh2 = document.createElement("th");
            //             priceTh2.className = "price";
            //             priceTh2.textContent = "الكلي";

            //             headerRow.appendChild(descriptionTh);
            //             headerRow.appendChild(quantityTh);
            //             headerRow.appendChild(priceTh1);
            //             headerRow.appendChild(priceTh2);

            //             // Append the header row to the <thead> element
            //             thead.appendChild(headerRow);
            //             const itemRows = [
            //             ];

            //             // Create the item rows (<tr>) with their cells (<td>)
            //             console.log()
            //             data.food.forEach(food => {
            //                 itemRows.push([`${food.id.name}`, `${food.quantity}`, `${food.id.price}`, `${Number(food.quantity) * Number(food.id.price)}`]);
            //             })

            //             for (const item of itemRows) {
            //                 const itemRow = document.createElement("tr");

            //                 const descriptionTd = document.createElement("td");
            //                 descriptionTd.className = "الاسم";
            //                 descriptionTd.textContent = item[0];
            //                 const quantityTd = document.createElement("td");
            //                 quantityTd.className = "العدد";
            //                 quantityTd.textContent = item[1];
            //                 const priceTd = document.createElement("td");
            //                 priceTd.className = "السعر";
            //                 priceTd.textContent = item[2];
            //                 const fullprice = document.createElement("td");
            //                 priceTd.className = "السعر الكلي";
            //                 priceTd.textContent = item[3];
            //                 itemRow.appendChild(descriptionTd);
            //                 itemRow.appendChild(quantityTd);
            //                 itemRow.appendChild(priceTd);

            //                 // Append the item row to the <tbody> element
            //                 tbody.appendChild(itemRow);
            //             }

            //             // Create the discount row (<tr>) with its cells (<td>)
            //             const discountRow = document.createElement("tr");

            //             const emptyTd1 = document.createElement("td");
            //             emptyTd1.className = "quantity";

            //             const descriptionTd = document.createElement("td");
            //             descriptionTd.className = "description";
            //             descriptionTd.textContent = "الخصومات";

            //             const finalPriceTd = document.createElement("td");
            //             finalPriceTd.className = "finalprice";
            //             finalPriceTd.textContent = `${data.fulldiscont}`;

            //             discountRow.appendChild(emptyTd1);
            //             discountRow.appendChild(descriptionTd);
            //             discountRow.appendChild(finalPriceTd);

            //             // Append the discount row to the <tbody> element
            //             tbody.appendChild(discountRow);

            //             // Create the total row (<tr>) with its cells (<td>)
            //             const totalRow = document.createElement("tr");

            //             const emptyTd2 = document.createElement("td");
            //             emptyTd2.className = "quantity";

            //             const descriptionTd2 = document.createElement("td");
            //             descriptionTd2.className = "description";
            //             descriptionTd2.textContent = `TOTAL`;

            //             const finalPriceTd2 = document.createElement("td");
            //             finalPriceTd2.className = "finalprice";
            //             finalPriceTd2.textContent = `${data.finalcost}`;

            //             totalRow.appendChild(emptyTd2);
            //             totalRow.appendChild(descriptionTd2);
            //             totalRow.appendChild(finalPriceTd2);

            //             // Append the total row to the <tbody> element
            //             tbody.appendChild(totalRow);

            //             // Append the <thead> and <tbody> elements to the <table> element
            //             table.appendChild(thead);
            //             table.appendChild(tbody);

            //             // Create the second <p> element with class "centered" and its text
            //             const p2 = document.createElement("p");
            //             p2.className = "centered";
            //             p2.textContent = "شكرا لتعاملكم معنا";

            //             // Create the third inner <div> element with class "footerpos"
            //             const footerposDiv1 = document.createElement("div");
            //             footerposDiv1.className = "footerpos";

            //             // Create the <a> element and set its text
            //             const a1 = document.createElement("a");
            //             a1.textContent = `العنوان : ${data.setting.adress}`;

            //             // Append the <a> element to the third inner <div>
            //             footerposDiv1.appendChild(a1);

            //             // Create the fourth inner <div> element with class "footerpos"
            //             const footerposDiv2 = document.createElement("div");
            //             footerposDiv2.className = "footerpos";

            //             // Create the <a> element and set its text
            //             const a2 = document.createElement("a");
            //             a2.textContent = `رقم الهاتف : ${data.setting.phonnumber}`;

            //             // Append the <a> element to the fourth inner <div>
            //             footerposDiv2.appendChild(a2);

            //             // Append all the elements to the inner <div>
            //             ticketDiv.appendChild(table);
            //             ticketDiv.appendChild(footerposDiv1);
            //             ticketDiv.appendChild(footerposDiv2);
            //             ticketDiv.appendChild(p2);

            //             // Append the inner <div> to the outer <div>
            //             ticketPrinterDiv.appendChild(ticketDiv);
            //             // Append the outer <div> to the body of the HTML document
            //             document.body.appendChild(ticketPrinterDiv);


            //             setTimeout(function () {
            //                 window.print();
            //             }, 500); // 500 milliseconds = 0.5 seconds
            //         })
            //         .catch(error => {
            //             console.error(error);
            //         });

            // }

        </script>


        <script>
            let indordelevery = false;
            $(document).on('click', '[id^=increaseQuantity]', function () {
                var id = this.id;
                var foodId = id.replace('increaseQuantity', '');
                const currentValue = $(`#quantity${foodId}`).val();
                $(`#quantity${foodId}`).val(Number(currentValue) + 1);
                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const quantity = $(`#quantity${foodId}`).val()
                console.log(quantity)
                const invoiceId = $('#invoiceidelement').text()
                fetch("/invoice/changequantity/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ tableId, invoiceId, foodId, quantity })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data.foodItem.quantity)
                        getprices(invoiceId)
                        // $("#finalcost").text();
                        // $("#totalprice").text();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            });

            $(document).on('click', '[id^=decreaseQuantity]', function () {
                var id = this.id;
                var foodId = id.replace('decreaseQuantity', '');
                const currentValue = $(`#quantity${foodId}`).val();
                if (Number(currentValue) > 1) {
                    $(`#quantity${foodId}`).val(Number(currentValue) - 1);
                }

                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const quantity = $(`#quantity${foodId}`).val()
                console.log(quantity)
                const invoiceId = $('#invoiceidelement').text()
                fetch("/invoice/changequantity/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ tableId, invoiceId, foodId, quantity })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data.foodItem.quantity)
                        getprices(invoiceId)
                        // $("#finalcost").text();
                        // $("#totalprice").text();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });



            });

            function quantitychange(event) {
                const inputElement = event.target;

                // Retrieve the ID of the input element
                const inputId = inputElement.id;
                var foodId = inputId.replace('quantity', '');

                // Use the inputId as needed

                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const quantity = $(`#${inputId}`).val()
                console.log(quantity)
                const invoiceId = $('#invoiceidelement').text()
                fetch("/invoice/changequantity/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ tableId, invoiceId, foodId, quantity })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data.foodItem.quantity)
                        getprices(invoiceId)
                        // $("#finalcost").text();
                        // $("#totalprice").text();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            }

            function discountchange(event) {
                const inputElement = event.target;

                // Retrieve the ID of the input element
                const inputId = inputElement.id;

                // Use the inputId as needed
                const discount = $("#discontinput").val()
                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const invoiceId = $('#invoiceidelement').text()
                fetch("/invoice/changedescount/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ invoiceId, discount })
                })
                    .then(response => response.json())
                    .then(data => {
                        getprices(invoiceId)
                        // $("#finalcost").text();
                        // $("#totalprice").text();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            }

            function deleveryCostChange(event) {
                const inputElement = event.target;

                // Retrieve the ID of the input element
                const inputId = inputElement.id;

                // Use the inputId as needed
                const deleveryCost = $("#deleveryCost").val()
                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const invoiceId = $('#invoiceidelement').text()
                fetch("/invoice/changedeleverycost/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ invoiceId, deleveryCost })
                })
                    .then(response => response.json())
                    .then(data => {
                        getprices(invoiceId)
                        // $("#finalcost").text();
                        // $("#totalprice").text();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            }



            function getprices(invoiceId) {
                fetch("/invoice/price/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ invoiceId })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data.deleveryCost)
                        $("#finalcost").text(data.finalprice);
                        $("#totalprice").text(data.total);
                        $("#totaldiscount").text(data.totaldiscount);
                        $("#deleveryCostView").text(data.deleveryCost);
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            }

            $("#previosinvoice").on('click', (event) => {
                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");



                console.log(tableId)
                fetch("/invoice/previesinvoice/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ tableId })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.reloded == true) {
                            $("#invoiceidelement").text(`${data.lastinvoiceid}`);
                            refrash()
                        }

                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            })
            $("#reloadfoods").on('click', (event) => {
                refrash()
            })

            $("#translateinvoice").on('click', (event) => {
                if (!$('#shadedbackground').hasClass('hidden')) {
                    $('#shadedbackground').addClass('hidden');
                    $('#editableform').addClass('hidden');
                } else {
                    $(`#shadedbackground`).removeClass('hidden');
                    $(`#editableform`).removeClass('hidden');
                }
            })
            $('#shadedbackground').on('click', (event) => {
                $('#shadedbackground').addClass('hidden');
                $('#editableform').addClass('hidden');
            })

            $("#insidelevery").on('click', (event) => {
                if ($('#insidelevery').hasClass('bg-green-100')) {
                    indordelevery=true;
                    $("#deloveryphone").attr("readonly", "readonly");
                    $("#deloveryname").attr("readonly", "readonly");
                    // $("#resivename").attr("readonly", "readonly");
                    $("#deloveryphone").val("")
                    $("#deloveryname").val("")
                    $(`#insidelevery`).removeClass('bg-green-100');
                    $('#insidelevery').addClass('bg-green-400');
                } else {
                    indordelevery=false;
                    $("#deloveryphone").removeAttr("readonly");
                    $("#deloveryname").removeAttr("readonly");
                    // $("#resivename").removeAttr("readonly");
                    $(`#insidelevery`).removeClass('bg-green-400');
                    $('#insidelevery').addClass('bg-green-100');
                }
            })
        </script>

        <script src="/js/casher.js"></script>
        <script src="/js/printinvoice.js"></script>

        <%- include('footer',{currentpage:'delevery'}); %>