<%- include('header'); %>
    <div class="flex">
        <div class="w-1/4" style="width: 30%;">
            <div class="bg-white mb-0.5 items-center " style="height: 6%; display: flex;justify-content: space-around;">
                <div class="flex gap-3">
                    <div class="w-10 h-10 rounded-lg bg-gray-100"></div>
                    <div class="w-10 h-10 rounded-lg bg-gray-100"></div>
                    <div class="w-10 h-10 rounded-lg bg-gray-100"></div>
                </div>
                <div class="w-24 h-10 rounded-lg bg-gray-100"></div>
            </div>
            <div id="invoicefood" class="bg-white relative overflow-auto h-96">

            </div>
            <div class="mt-5 w-full flex items-center justify-center h-12">
                <div class="mb-6 w-3/4">
                    <input type="text" placeholder="خصم" name="name" oninput="discountchange(event)" id="discontinput"
                        class="bg-gray-50 text-right border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                </div>


            </div>

            <div class="bg-zinc-100 h-1/4 pt-3">
                <div class="flex justify-around gap-16 mb-1 items-center">
                    <div class="font-medium text-sm"><a id="totalprice">0</a><span> IQD</span></div>
                    <div class="text-gray-600 text-sm"><a>مجموع السعر</a></div>
                </div>
                <div class="w-full h-0.5 bg-slate-400 opacity-20"></div>
                <div class="flex justify-around my-1 gap-16 items-center">
                    <div class="font-medium text-sm"><a id="totaldiscount">0</a><span> IQD</span></div>
                    <div class="text-gray-600 text-sm"><a>الخصومات</a></div>
                </div>
                <div class="w-full h-0.5 bg-slate-400 opacity-20"></div>
                <div class="flex justify-around my-1 gap-16 items-center">
                    <div class="font-bold"><a id="finalcost">0</a><span> IQD</span></div>
                    <div class="text-black text-base font-semibold"><a>السعر النهائي</a></div>
                </div>
                <div class="w-full h-0.5 bg-slate-400 opacity-20"></div>
                <div class="flex items-center p-3 gap-4">
                    <div class="w-1/2">
                        <button onclick="finish()"
                            class="bg-green-300 hover:bg-green-400 w-full h-12 rounded-md">انهاء</button>
                    </div>
                    <div class="w-1/2">
                        <button onclick="cancele()"
                            class="bg-red-300 hover:bg-red-400 w-full h-12 rounded-md">الغاء</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="bg-gray-100 w-3/4">
            <div class="mx-auto max-w-2xl px-4 pb-16 sm:px-6 sm:py-1.5 lg:max-w-7xl lg:px-8">
                <div class="w-full flex items-center gap-2 h-16 bg-white rounded-lg mb-6 justify-end p-3">
                    <%if(category[0]){%>
                        <%category.forEach(function(categorys,index) { %>
                            <div id="categorydoor<%=categorys.id%>"
                                class="h-8 cursor-pointer flex items-center p-3 hover:bg-orange-300 bg-orange-100   rounded-xl ">
                                <%=categorys.name%>
                            </div>
                            <%})}else{%>
                                <div
                                    class="h-8 cursor-pointer flex items-center p-3 hover:bg-orange-300 bg-orange-100   rounded-xl ">
                                    لا يوجد اقسام
                                </div>
                                <%}%>
                </div>
                <%if(category[0]){%>
                    <%category.forEach(function(categorys,index) { %>
                        <% if(index==0){%>
                            <div id="cataegoryfoodscontect<%=categorys.id%>"
                                class=" grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 xl:gap-x-8 overflow-y-scroll "
                                style="height: 76vh;">
                                <% }else{%>
                                    <div id="cataegoryfoodscontect<%=categorys.id%>"
                                        class="hidden grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2   lg:grid-cols-3 xl:grid-cols-6 xl:gap-x-8 overflow-y-scroll "
                                        style="height: 76vh;">
                                        <%}%>
                                            <%if(categorys.foods){%>
                                                <%for (let i=0; i < categorys.foods.length; i++) { %>
                                                    <div class=" group text-center bg-white "
                                                        id="selectfood<%=categorys.foods[i].id%>">
                                                        <div
                                                            class="aspect-h-1 aspect-w-1  w-full overflow-hidden rounded-lg bg-gray-200 xl:aspect-h-6 xl:aspect-w-6">
                                                            <img src="<%=categorys.foods[i].image.url%>"
                                                                alt="Tall slender porcelain bottle with natural clay textured body and cork stopper."
                                                                class="h-full w-full object-cover object-center cursor-pointer group-hover:opacity-75">
                                                        </div>
                                                        <h3 class="mt-4 text-sm text-gray-700">
                                                            <%=categorys.foods[i].name%>
                                                        </h3>
                                                        <div
                                                            class=" border-solid pb-3 border-violet-50 border-t-2 w-full">
                                                            <p class="mt-1 text-lg font-medium text-gray-900">
                                                                <%=categorys.foods[i].price%> IQD
                                                            </p>
                                                        </div>
                                                    </div>
                                                    <%}}else{%>
                                                        <a>لا يوجد اطعمة مضافة</a>
                                                        <%}%>
                                    </div>
                                    <%})}else{%>
                                        <%}%>
                            </div>
            </div>
        </div>
        <a id="invoiceidelement" class="hidden"></a>
        <script>
            var previosopendoor = "<%=category[0].id%>";
            $(document).on('click', '[id^=categorydoor]', function () {
                var id = this.id;

                var categoryid = id.replace('categorydoor', '');
                if ($(`#cataegoryfoodscontect${categoryid}`).css('display') === 'none') {
                    $(`#cataegoryfoodscontect${categoryid}`).removeClass('hidden');
                    if (previosopendoor) {
                        $(`#cataegoryfoodscontect${previosopendoor}`).addClass('hidden');
                    }
                } else {

                }
                previosopendoor = categoryid
            });
        </script>

        <script>
            const currentUrl = window.location.href;
            console.log("Current URL:", currentUrl);
            const url = new URL(currentUrl);
            const searchParams = new URLSearchParams(url.search);
            const table = searchParams.get("tableid");
            console.log("ID:", table);

            fetch(`/invoice/${table}/foodmenu`)
                .then(response => response.json())
                .then(data => {
                    let totalPrice = 0; // Initialize the total price variable
                    let fulldiscount = 0
                    let invoiceid = data.invoiceid
                    $("#invoiceidelement").text(`${invoiceid}`);
                    console.log(data)
                    // Iterate over each food item and create the corresponding HTML
                    data.food.forEach(food => {
                        const foodTotalPrice = food.id.price * food.quantity;
                        totalPrice += foodTotalPrice;
                        fulldiscount += food.discount;

                        newitem(food.id, invoiceid, food.quantity)
                        getprices($("#invoiceidelement").text())
                    });
                    console.log('Overall total price:', totalPrice);
                    console.log('Overall total price:', fulldiscount);
                    $("#totaldiscount").text(`${fulldiscount}`);
                    $("#totalprice").text(`${totalPrice}`);
                    $("#finalcost").text(`${totalPrice - fulldiscount}`);
                })
                .catch(error => {
                    console.error(error);
                });

            $(document).on('click', '[id^=selectfood]', function () {
                var id = this.id;
                const foodId = id.replace('selectfood', '');

                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const table = searchParams.get("tableid");
                console.log("ID:", table);
                const tableId = table; // Replace with the actual table ID
                fetch("/invoice/food/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ tableId, foodId })
                })
                    .then(response => response.json())
                    .then(data => {
                        $("#invoiceidelement").text(`${data.invoiceId}`)

                        if (data.message == "alredyadd") {
                            console.log(data)
                            $(`#quantity${data.updatedfoodid}`).val(`${data.newquantity}`);
                            console.log($(`#quantity${data.food._id}`).text())
                            getprices($("#invoiceidelement").text())
                        } else {
                            invoiceid = $("#invoiceidelement").text()
                            console.log(data.food);
                            newitem(data.food, invoiceid, data.newquantity)
                            getprices($("#invoiceidelement").text())
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            });

            function newitem(food, invoiceid, newquantity) {
                console.log(newquantity)
                // Create the main invoice div
                const invoiceFoodDiv = document.getElementById('invoicefood');
                const invoiceDiv = document.createElement('div');
                invoiceDiv.id = `${food._id}`
                invoiceDiv.classList.add('w-full', 'my-1', 'h-12', 'bg-slate-50', 'flex', 'justify-around', 'items-center', 'cursor-pointer', 'hover:bg-zinc-200');

                // Create the inner content of the invoice div
                const contentDiv = document.createElement('div');
                contentDiv.classList.add('flex', 'justify-center', 'items-center', 'text-sm', 'font-semibold');

                // Create the SVG element
                const svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
                svgElement.classList.add('opacity-50');
                svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');
                svgElement.setAttribute('height', '1em');
                svgElement.setAttribute('viewBox', '0 0 320 512');

                // Create the path element inside the SVG
                const pathElement = document.createElementNS('http://www.w3.org/2000/svg', 'path');
                pathElement.setAttribute('d', 'M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z');

                // Create the price element
                const priceDiv = document.createElement('div');
                priceDiv.classList.add('mx-2');
                priceDiv.id = `price${food._id}`;
                priceDiv.textContent = `${food.price}`; // Replace `food.price` with the actual property that holds the price

                const removelement = document.createElement('div');
                removelement.classList.add('w-8', 'rounded-full', 'h-8', 'flex', 'justify-around', 'items-center', 'bg-red-300', 'hover:bg-red-400')
                removelement.id = `removeinvoice{"invoiceid":"${invoiceid}","foodid":"${food._id}"}`
                removelement.textContent = "x"

                // Create the food name element
                const foodNameDiv = document.createElement('div');
                foodNameDiv.classList.add('mx-2', 'text-sm', 'font-bold');
                const foodNameLink = document.createElement('a');
                foodNameLink.textContent = food.name; // Replace `food.name` with the actual property that holds the food name
                foodNameDiv.appendChild(foodNameLink);

                // Create the fieldset element
                const fieldset = document.createElement('fieldset');
                fieldset.setAttribute('data-quantity', '');

                // Create the "Down" button
                const decreaseButton = document.createElement('button');
                decreaseButton.setAttribute('type', 'button');
                decreaseButton.setAttribute('title', 'Down');
                decreaseButton.setAttribute('id', `decreaseQuantity${food._id}`);
                decreaseButton.setAttribute('class', 'sub');
                decreaseButton.textContent = '-';

                // Create the input element
                const input = document.createElement('input');
                input.setAttribute('type', 'number');
                input.setAttribute('type', 'number');
                input.setAttribute('oninput', `quantitychange(event)`);
                input.setAttribute('id', `quantity${food._id}`);
                input.setAttribute('pattern', '[0-9]+');
                input.value = Number(newquantity); // Replace 10 with the desired value

                // Create the "Up" button
                const increaseButton = document.createElement('button');
                increaseButton.setAttribute('type', 'button');
                increaseButton.setAttribute('title', 'Up');
                increaseButton.setAttribute('id', `increaseQuantity${food._id}`);
                increaseButton.setAttribute('class', 'add');
                increaseButton.textContent = '+';

                // Append the elements to the fieldset
                fieldset.appendChild(decreaseButton);
                fieldset.appendChild(input);
                fieldset.appendChild(increaseButton);

                // Create the quantity element
                const quantityDiv = document.createElement('input');
                quantityDiv.classList.add('mx-2', 'text-sm', 'font-bold');
                quantityDiv.id = `quantity${food._id}`
                quantityDiv.textContent = Number(newquantity); // Replace `food.quantity` with the actual property that holds the quantity
                // Append all the elements to their respective parents
                svgElement.appendChild(pathElement);
                invoiceDiv.appendChild(removelement);

                contentDiv.appendChild(svgElement);
                contentDiv.appendChild(priceDiv);
                invoiceDiv.appendChild(contentDiv);
                invoiceDiv.appendChild(foodNameDiv);
                invoiceDiv.appendChild(fieldset);

                // Append the invoice div to the main invoicefood div
                invoiceFoodDiv.appendChild(invoiceDiv);
            }


            $(document).on('click', '[id^=removeinvoice]', function () {
                var id = this.id;
                var foodid = id.replace('removeinvoice', '');
                var foodjson = JSON.parse(foodid)
                console.log(foodjson)

                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");

                fetch(`/invoice/${tableId}/${foodjson.invoiceid}/food/${foodjson.foodid}`, {
                    method: 'DELETE',
                })
                    .then(response => {
                        if (response.ok) {
                            deletedfoodprice = Number($(`#price${foodjson.foodid}`).text());
                            deletedfoodquantity = Number($(`#quantity${foodjson.foodid}`).val());
                            deletedfoodfinalprice = deletedfoodquantity * deletedfoodprice
                            corentfinalprice = Number($("#totalprice").text()) - deletedfoodfinalprice
                            console.log(deletedfoodfinalprice)
                            console.log(corentfinalprice)
                            // $("#totaldiscount").text(`${fulldiscount}`);
                            getprices($("#invoiceidelement").text())
                            console.log('Food item removed successfully');
                            const divToRemove = document.getElementById(`${foodjson.foodid}`);
                            // Check if the div element exists
                            if (divToRemove) {
                                // Remove the div element
                                divToRemove.remove();



                            } else {
                                console.log("Div element not found.");
                            }

                        } else {
                            throw new Error('Failed to remove food item');
                        }
                    })
                    .catch(error => {
                        console.error(error);
                    });

            })

            function cancele() {
                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const invoiceId = $('#invoiceidelement').text()
                const finalcost = $("#finalcost").text();
                const totalcost = $("#totalprice").text();
                const totaldicont = $("#totaldiscount").text();


                fetch("/invoice/cancele/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ tableId, invoiceId, finalcost, totalcost, totaldicont })
                })
                    .then(response => response.json())
                    .then(data => {
                        $("#finalcost").text(0);
                        $("#totalprice").text(0);
                        $("#totaldiscount").text(0)
                        console.log(data)
                        $("#invoiceidelement").text(" ");
                        const invoiceFoodDiv = document.getElementById("invoicefood");
                        invoiceFoodDiv.innerHTML = "";
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            }
            function finish() {
                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const finalcost = $("#finalcost").text();
                const totalcost = $("#totalprice").text();
                const totaldicont = $("#totaldiscount").text();
                const invoiceId = $('#invoiceidelement').text();
                printinvoice(invoiceId)
                fetch("/invoice/finish/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ tableId, invoiceId, finalcost, totalcost, totaldicont })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data)
                        $("#finalcost").text(0);
                        $("#totalprice").text(0);
                        $("#totaldiscount").text(0)
                        $("#invoiceidelement").text(" ");
                        const invoiceFoodDiv = document.getElementById("invoicefood");
                        invoiceFoodDiv.innerHTML = "";
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            }

            function printinvoice(invoiceId) {
                fetch(`/invoice/${invoiceId}/checout`)
                    .then(response => response.json())
                    .then(data => {

                        const elementsToRemove = document.querySelectorAll(".ticketprinter");
                        // Remove each element and its contents
                        elementsToRemove.forEach(element => {
                            element.parentNode.removeChild(element);
                        });

                        // Create the outer <div> element with class "ticketprinter"
                        const ticketPrinterDiv = document.createElement("div");
                        ticketPrinterDiv.className = "ticketprinter";

                        // Create the inner <div> element with class "ticket"
                        const ticketDiv = document.createElement("div");
                        ticketDiv.className = "ticket";

                        // Create the first inner <div> element with class "logoimg"
                        const logoimgDiv1 = document.createElement("div");
                        logoimgDiv1.className = "logoimg";

                        // Create the <img> element and set its attributes
                        const img1 = document.createElement("img");
                        img1.src = `${data.setting.shoplogo}`;
                        img1.alt = "Logo";

                        // Append the <img> element to the first inner <div>
                        logoimgDiv1.appendChild(img1);

                        // Create the first <p> element with class "centered" and its text
                        const p1 = document.createElement("p");
                        p1.className = "centered";
                        p1.textContent = "الفاتورة";

                        // Append the first inner <div> and <p> element to the outer <div>
                        ticketDiv.appendChild(logoimgDiv1);
                        ticketDiv.appendChild(p1);

                        // Create the second inner <div> element with class "logoimg"
                        const logoimgDiv2 = document.createElement("div");
                        logoimgDiv2.className = "logoimg";

                        // Create the <a> element and set its text
                        const a = document.createElement("a");
                        a.textContent = "عنوان التوصيل : حي الزهور";

                        // Append the <a> element to the second inner <div>
                        logoimgDiv2.appendChild(a);

                        // Append the second inner <div> to the outer <div>
                        ticketDiv.appendChild(logoimgDiv2);

                        // Create the <table> element
                        const table = document.createElement("table");

                        // Create the <thead> and <tbody> elements
                        const thead = document.createElement("thead");
                        const tbody = document.createElement("tbody");

                        // Create the header row (<tr>) with its cells (<th>)
                        const headerRow = document.createElement("tr");

                        const descriptionTh = document.createElement("th");
                        descriptionTh.className = "description";
                        descriptionTh.textContent = "الاسم";

                        const quantityTh = document.createElement("th");
                        quantityTh.className = "quantity";
                        quantityTh.textContent = "#";

                        const priceTh1 = document.createElement("th");
                        priceTh1.className = "price";
                        priceTh1.textContent = "السعر";

                        const priceTh2 = document.createElement("th");
                        priceTh2.className = "price";
                        priceTh2.textContent = "الكلي";

                        headerRow.appendChild(descriptionTh);
                        headerRow.appendChild(quantityTh);
                        headerRow.appendChild(priceTh1);
                        headerRow.appendChild(priceTh2);

                        // Append the header row to the <thead> element
                        thead.appendChild(headerRow);
                        const itemRows = [
                        ];

                        // Create the item rows (<tr>) with their cells (<td>)
                        console.log()
                        data.food.forEach(food => {
                            itemRows.push([`${food.id.name}`, `${food.quantity}`, `${food.id.price}`, `${Number(food.quantity) * Number(food.id.price)}`]);
                        })

                        for (const item of itemRows) {
                            const itemRow = document.createElement("tr");

                            const descriptionTd = document.createElement("td");
                            descriptionTd.className = "الاسم";
                            descriptionTd.textContent = item[0];
                            const quantityTd = document.createElement("td");
                            quantityTd.className = "العدد";
                            quantityTd.textContent = item[1];
                            const priceTd = document.createElement("td");
                            priceTd.className = "السعر";
                            priceTd.textContent = item[2];
                            const fullprice = document.createElement("td");
                            priceTd.className = "السعر الكلي";
                            priceTd.textContent = item[3];
                            itemRow.appendChild(descriptionTd);
                            itemRow.appendChild(quantityTd);
                            itemRow.appendChild(priceTd);

                            // Append the item row to the <tbody> element
                            tbody.appendChild(itemRow);
                        }

                        // Create the discount row (<tr>) with its cells (<td>)
                        const discountRow = document.createElement("tr");

                        const emptyTd1 = document.createElement("td");
                        emptyTd1.className = "quantity";

                        const descriptionTd = document.createElement("td");
                        descriptionTd.className = "description";
                        descriptionTd.textContent = "الخصومات";

                        const finalPriceTd = document.createElement("td");
                        finalPriceTd.className = "finalprice";
                        finalPriceTd.textContent = `${data.fulldiscont}`;

                        discountRow.appendChild(emptyTd1);
                        discountRow.appendChild(descriptionTd);
                        discountRow.appendChild(finalPriceTd);

                        // Append the discount row to the <tbody> element
                        tbody.appendChild(discountRow);

                        // Create the total row (<tr>) with its cells (<td>)
                        const totalRow = document.createElement("tr");

                        const emptyTd2 = document.createElement("td");
                        emptyTd2.className = "quantity";

                        const descriptionTd2 = document.createElement("td");
                        descriptionTd2.className = "description";
                        descriptionTd2.textContent = `TOTAL`;

                        const finalPriceTd2 = document.createElement("td");
                        finalPriceTd2.className = "finalprice";
                        finalPriceTd2.textContent = `${data.finalcost}`;

                        totalRow.appendChild(emptyTd2);
                        totalRow.appendChild(descriptionTd2);
                        totalRow.appendChild(finalPriceTd2);

                        // Append the total row to the <tbody> element
                        tbody.appendChild(totalRow);

                        // Append the <thead> and <tbody> elements to the <table> element
                        table.appendChild(thead);
                        table.appendChild(tbody);

                        // Create the second <p> element with class "centered" and its text
                        const p2 = document.createElement("p");
                        p2.className = "centered";
                        p2.textContent = "شكرا لتعاملكم معنا";

                        // Create the third inner <div> element with class "footerpos"
                        const footerposDiv1 = document.createElement("div");
                        footerposDiv1.className = "footerpos";

                        // Create the <a> element and set its text
                        const a1 = document.createElement("a");
                        a1.textContent = `العنوان : ${data.setting.adress}`;

                        // Append the <a> element to the third inner <div>
                        footerposDiv1.appendChild(a1);

                        // Create the fourth inner <div> element with class "footerpos"
                        const footerposDiv2 = document.createElement("div");
                        footerposDiv2.className = "footerpos";

                        // Create the <a> element and set its text
                        const a2 = document.createElement("a");
                        a2.textContent = `رقم الهاتف : ${data.setting.phonnumber}`;

                        // Append the <a> element to the fourth inner <div>
                        footerposDiv2.appendChild(a2);

                        // Append all the elements to the inner <div>
                        ticketDiv.appendChild(table);
                        ticketDiv.appendChild(footerposDiv1);
                        ticketDiv.appendChild(footerposDiv2);
                        ticketDiv.appendChild(p2);

                        // Append the inner <div> to the outer <div>
                        ticketPrinterDiv.appendChild(ticketDiv);
                        // Append the outer <div> to the body of the HTML document
                        document.body.appendChild(ticketPrinterDiv);


                        setTimeout(function () {
                            window.print();
                        }, 500); // 500 milliseconds = 0.5 seconds
                    })
                    .catch(error => {
                        console.error(error);
                    });

            }
        </script>

        <script>
            $(document).on('click', '[id^=increaseQuantity]', function () {
                var id = this.id;
                var foodId = id.replace('increaseQuantity', '');
                const currentValue = $(`#quantity${foodId}`).val();
                $(`#quantity${foodId}`).val(Number(currentValue) + 1);
                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const quantity = $(`#quantity${foodId}`).val()
                console.log(quantity)
                const invoiceId = $('#invoiceidelement').text()
                fetch("/invoice/changequantity/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ tableId, invoiceId, foodId, quantity })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data.foodItem.quantity)
                        getprices(invoiceId)
                        // $("#finalcost").text();
                        // $("#totalprice").text();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            });

            $(document).on('click', '[id^=decreaseQuantity]', function () {
                var id = this.id;
                var foodId = id.replace('decreaseQuantity', '');
                const currentValue = $(`#quantity${foodId}`).val();
                if (Number(currentValue) > 1) {
                    $(`#quantity${foodId}`).val(Number(currentValue) - 1);
                }

                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const quantity = $(`#quantity${foodId}`).val()
                console.log(quantity)
                const invoiceId = $('#invoiceidelement').text()
                fetch("/invoice/changequantity/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ tableId, invoiceId, foodId, quantity })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data.foodItem.quantity)
                        getprices(invoiceId)
                        // $("#finalcost").text();
                        // $("#totalprice").text();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });



            });

            function quantitychange(event) {
                const inputElement = event.target;

                // Retrieve the ID of the input element
                const inputId = inputElement.id;
                var foodId = inputId.replace('quantity', '');

                // Use the inputId as needed

                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const quantity = $(`#${inputId}`).val()
                console.log(quantity)
                const invoiceId = $('#invoiceidelement').text()
                fetch("/invoice/changequantity/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ tableId, invoiceId, foodId, quantity })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data.foodItem.quantity)
                        getprices(invoiceId)
                        // $("#finalcost").text();
                        // $("#totalprice").text();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            }

            function discountchange(event) {
                const inputElement = event.target;

                // Retrieve the ID of the input element
                const inputId = inputElement.id;

                // Use the inputId as needed
                const discount = $("#discontinput").val() 
                const currentUrl = window.location.href;
                console.log("Current URL:", currentUrl);
                const url = new URL(currentUrl);
                const searchParams = new URLSearchParams(url.search);
                const tableId = searchParams.get("tableid");
                const invoiceId = $('#invoiceidelement').text()
                fetch("/invoice/changedescount/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({invoiceId, discount })
                })
                    .then(response => response.json())
                    .then(data => {
                        getprices(invoiceId)
                        // $("#finalcost").text();
                        // $("#totalprice").text();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            }

            function getprices(invoiceId) {
                fetch("/invoice/price/", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ invoiceId })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data)
                        $("#finalcost").text(data.finalprice);
                        $("#totalprice").text(data.total);
                        $("#totaldiscount").text(data.totaldiscount);
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle errors
                    });
            }

        </script>



        <script>



        </script>

        <%- include('footer'); %>